mnemonic,op_code,destination,source,encoder
aaa,0x00,,,"[37]"
aad,0x00,,,"[d5 0a]"
aad,0x00,imm,,"[i: d5 ib,u]"
aam,0x00,,,"[d4 0a]"
aam,0x00,imm,,"[i: d4 ib,u]"
aas,0x00,,,"[3f]"
adc,0x00,mem,reg8,"[mr: 10 /r]"
adc,0x00,reg8,reg8,"[mr: 10 /r]"
adc,0x00,mem,reg16,"[mr: 11 /r]"
adc,0x00,reg16,reg16,"[mr: 11 /r]"
adc,0x00,reg8,mem,"[rm: 12 /r]"
adc,0x00,reg8,reg8,"[rm: 12 /r]"
adc,0x00,reg16,mem,"[rm: 13 /r]"
adc,0x00,reg16,reg16,"[rm: 13 /r]"
adc,0x00,rm16,imm8,"[mi: 83 /2 ib,s]"
adc,0x00,al,imm,"[-i: 14 ib]"
adc,0x00,ax,sbyteword,"[mi: 83 /2 ib,s]"
adc,0x00,ax,imm,"[-i: 15 iw]"
adc,0x00,rm8,imm,"[mi: 80 /2 ib]"
adc,0x00,rm16,sbyteword,"[mi: 83 /2 ib,s]"
adc,0x00,rm16,imm,"[mi: 81 /2 iw]"
adc,0x00,mem,imm8,"[mi: 80 /2 ib]"
adc,0x00,mem,sbyteword16,"[mi: 83 /2 ib,s]"
adc,0x00,mem,imm16,"[mi: 81 /2 iw]"
adc,0x00,rm8,imm,"[mi: 82 /2 ib]"
add,0x00,mem,reg8,"[mr: 00 /r]"
add,0x00,reg8,reg8,"[mr: 00 /r]"
add,0x00,mem,reg16,"[mr: 01 /r]"
add,0x00,reg16,reg16,"[mr: 01 /r]"
add,0x00,reg8,mem,"[rm: 02 /r]"
add,0x00,reg8,reg8,"[rm: 02 /r]"
add,0x00,reg16,mem,"[rm: 03 /r]"
add,0x00,reg16,reg16,"[rm: 03 /r]"
add,0x00,rm16,imm8,"[mi: 83 /0 ib,s]"
add,0x00,al,imm,"[-i: 04 ib]"
add,0x00,ax,sbyteword,"[mi: 83 /0 ib,s]"
add,0x00,ax,imm,"[-i: 05 iw]"
add,0x00,rm8,imm,"[mi: 80 /0 ib]"
add,0x00,rm16,sbyteword,"[mi: 83 /0 ib,s]"
add,0x00,rm16,imm,"[mi: 81 /0 iw]"
add,0x00,mem,imm8,"[mi: 80 /0 ib]"
add,0x00,mem,sbyteword16,"[mi: 83 /0 ib,s]"
add,0x00,mem,imm16,"[mi: 81 /0 iw]"
add,0x00,rm8,imm,"[mi: 82 /0 ib]"
and,0x00,mem,reg8,"[mr: 20 /r]"
and,0x00,reg8,reg8,"[mr: 20 /r]"
and,0x00,mem,reg16,"[mr: 21 /r]"
and,0x00,reg16,reg16,"[mr: 21 /r]"
and,0x00,reg8,mem,"[rm: 22 /r]"
and,0x00,reg8,reg8,"[rm: 22 /r]"
and,0x00,reg16,mem,"[rm: 23 /r]"
and,0x00,reg16,reg16,"[rm: 23 /r]"
and,0x00,rm16,imm8,"[mi: 83 /4 ib,s]"
and,0x00,al,imm,"[-i: 24 ib]"
and,0x00,ax,sbyteword,"[mi: 83 /4 ib,s]"
and,0x00,ax,imm,"[-i: 25 iw]"
and,0x00,rm8,imm,"[mi: 80 /4 ib]"
and,0x00,rm16,sbyteword,"[mi: 83 /4 ib,s]"
and,0x00,rm16,imm,"[mi: 81 /4 iw]"
and,0x00,mem,imm8,"[mi: 80 /4 ib]"
and,0x00,mem,sbyteword16,"[mi: 83 /4 ib,s]"
and,0x00,mem,imm16,"[mi: 81 /4 iw]"
and,0x00,rm8,imm,"[mi: 82 /4 ib]"
call,0x00,imm,,"[i: e8 rel]"
call,0x00,imm,,"[i: e8 rel] near"
call,0x00,imm,,"[i: 9a iwd seg] far"
call,0x00,imm16,,"[i: e8 rel]"
call,0x00,imm16,,"[i: e8 rel] near"
call,0x00,imm16,,"[i: 9a iwd seg] far"
call,0x00,seg_off,,"[ji: 9a iwd iw]"
call,0x00,seg_off,,"[ji: 9a iw iw]"
call,0x00,seg_off,,"[ji: 9a iw iw]"
call,0x00,mem,,"[m: ff /3] far"
call,0x00,mem16,,"[m: ff /3] far"
call,0x00,mem,,"[m: ff /2] near"
call,0x00,rm16,,"[m: ff /2] near"
call,0x00,mem,,"[m: ff /2]"
call,0x00,rm16,,"[m: ff /2]"
cbw,0x00,,,"[98]"
clc,0x00,,,"[f8]"
cld,0x00,,,"[fc]"
cli,0x00,,,"[fa]"
cmc,0x00,,,"[f5]"
cmp,0x00,mem,reg8,"[mr: 38 /r]"
cmp,0x00,reg8,reg8,"[mr: 38 /r]"
cmp,0x00,mem,reg16,"[mr: 39 /r]"
cmp,0x00,reg16,reg16,"[mr: 39 /r]"
cmp,0x00,reg8,mem,"[rm: 3a /r]"
cmp,0x00,reg8,reg8,"[rm: 3a /r]"
cmp,0x00,reg16,mem,"[rm: 3b /r]"
cmp,0x00,reg16,reg16,"[rm: 3b /r]"
cmp,0x00,rm16,imm8,"[mi: 83 /7 ib,s]"
cmp,0x00,al,imm,"[-i: 3c ib]"
cmp,0x00,ax,sbyteword,"[mi: 83 /7 ib,s]"
cmp,0x00,ax,imm,"[-i: 3d iw]"
cmp,0x00,rm8,imm,"[mi: 80 /7 ib]"
cmp,0x00,rm16,sbyteword,"[mi: 83 /7 ib,s]"
cmp,0x00,rm16,imm,"[mi: 81 /7 iw]"
cmp,0x00,mem,imm8,"[mi: 80 /7 ib]"
cmp,0x00,mem,sbyteword16,"[mi: 83 /7 ib,s]"
cmp,0x00,mem,imm16,"[mi: 81 /7 iw]"
cmp,0x00,rm8,imm,"[mi: 82 /7 ib]"
cmpsb,0x00,,,"[repe a6]"
cmpsw,0x00,,,"[repe a7]"
cwd,0x00,,,"[99]"
daa,0x00,,,"[27]"
das,0x00,,,"[2f]"
dec,0x00,reg16,,"[r: 48+r]"
dec,0x00,rm8,,"[m: fe /1]"
dec,0x00,rm16,,"[m: ff /1]"
div,0x00,rm8,,"[m: f6 /6]"
div,0x00,rm16,,"[m: f7 /6]"
hlt,0x00,,,"[f4]"
idiv,0x00,rm8,,"[m: f6 /7]"
idiv,0x00,rm16,,"[m: f7 /7]"
imul,0x00,rm8,,"[m: f6 /5]"
imul,0x00,rm16,,"[m: f7 /5]"
in,0x00,al,imm,"[-i: e4 ib,u]"
in,0x00,ax,imm,"[-i: e5 ib,u]"
in,0x00,al,dx,"[--: ec]"
in,0x00,ax,dx,"[--: ed]"
inc,0x00,reg16,,"[r: 40+r]"
inc,0x00,rm8,,"[m: fe /0]"
inc,0x00,rm16,,"[m: ff /0]"
int,0x00,imm,,"[i: cd ib,u]"
int03,0x00,,,"[cc]"
int3,0x00,,,"[cc]"
into,0x00,,,"[ce]"
iret,0x00,,,"[cf]"
iretw,0x00,,,"[cf]"
jcxz,0x00,imm,,"[i: a16 e3 rel8]"
jmp,0x00,imm,,"[i: eb rel8] short"
jmp,0x00,imm,,"[i: jmp8 eb rel8]"
jmp,0x00,imm,,"[i: e9 rel]"
jmp,0x00,imm,,"[i: e9 rel] near"
jmp,0x00,imm,,"[i: ea iwd seg] far"
jmp,0x00,imm16,,"[i: e9 rel]"
jmp,0x00,imm16,,"[i: e9 rel] near"
jmp,0x00,imm16,,"[i: ea iwd seg] far"
jmp,0x00,seg_off,,"[ji: ea iwd iw]"
jmp,0x00,seg_off,,"[ji: ea iw iw]"
jmp,0x00,seg_off,,"[ji: ea iw iw]"
jmp,0x00,mem,,"[m: ff /5] far"
jmp,0x00,mem16,,"[m: ff /5] far"
jmp,0x00,mem,,"[m: ff /4] near"
jmp,0x00,rm16,,"[m: ff /4] near"
jmp,0x00,mem,,"[m: ff /4]"
jmp,0x00,rm16,,"[m: ff /4]"
lahf,0x00,,,"[9f]"
lds,0x00,reg16,mem,"[rm: c5 /r]"
lea,0x00,reg16,mem,"[rm: 8d /r]"
lea,0x00,reg16,imm,"[rm: 8d /r]"
les,0x00,reg16,mem,"[rm: c4 /r]"
lodsb,0x00,,,"[ac]"
lodsw,0x00,,,"[ad]"
loop,0x00,imm,,"[i: adf e2 rel8]"
loop,0x00,imm,cx,"[i-: a16 e2 rel8]"
loope,0x00,imm,,"[i: adf e1 rel8]"
loope,0x00,imm,cx,"[i-: a16 e1 rel8]"
loopne,0x00,imm,,"[i: adf e0 rel8]"
loopne,0x00,imm,cx,"[i-: a16 e0 rel8]"
loopnz,0x00,imm,,"[i: adf e0 rel8]"
loopnz,0x00,imm,cx,"[i-: a16 e0 rel8]"
loopz,0x00,imm,,"[i: adf e1 rel8]"
loopz,0x00,imm,cx,"[i-: a16 e1 rel8]"
mov,0x00,mem,seg,"[mr: 8c /r]"
mov,0x00,reg16,seg,"[mr: 8c /r]"
mov,0x00,seg,mem,"[rm: 8e /r]"
mov,0x00,seg,reg16,"[rm: 8e /r]"
mov,0x00,seg,reg16,"[rm: 8e /r]"
mov,0x00,al,mem,"[-i: a0 iwdq]"
mov,0x00,ax,mem,"[-i: a1 iwdq]"
mov,0x00,mem,al,"[i-: a2 iwdq]"
mov,0x00,mem,ax,"[i-: a3 iwdq]"
mov,0x00,mem,reg8,"[mr: r 88 /r]"
mov,0x00,reg8,reg8,"[mr: 88 /r]"
mov,0x00,mem,reg16,"[mr: r 89 /r]"
mov,0x00,reg16,reg16,"[mr: 89 /r]"
mov,0x00,reg8,mem,"[rm: 8a /r]"
mov,0x00,reg8,reg8,"[rm: 8a /r]"
mov,0x00,reg16,mem,"[rm: 8b /r]"
mov,0x00,reg16,reg16,"[rm: 8b /r]"
mov,0x00,reg8,imm,"[ri: b0+r ib]"
mov,0x00,reg16,imm,"[ri: b8+r iw]"
mov,0x00,rm8,imm,"[mi: r c6 /0 ib]"
mov,0x00,rm16,imm,"[mi: r c7 /0 iw]"
mov,0x00,mem,imm8,"[mi: r c6 /0 ib]"
mov,0x00,mem,imm16,"[mi: r c7 /0 iw]"
movsb,0x00,,,"[a4]"
movsw,0x00,,,"[a5]"
mul,0x00,rm8,,"[m: f6 /4]"
mul,0x00,rm16,,"[m: f7 /4]"
neg,0x00,rm8,,"[m: f6 /3]"
neg,0x00,rm16,,"[m: f7 /3]"
nop,0x00,,,"[norexb nof3 90]"
not,0x00,rm8,,"[m: f6 /2]"
not,0x00,rm16,,"[m: f7 /2]"
or,0x00,mem,reg8,"[mr: 08 /r]"
or,0x00,reg8,reg8,"[mr: 08 /r]"
or,0x00,mem,reg16,"[mr: 09 /r]"
or,0x00,reg16,reg16,"[mr: 09 /r]"
or,0x00,reg8,mem,"[rm: 0a /r]"
or,0x00,reg8,reg8,"[rm: 0a /r]"
or,0x00,reg16,mem,"[rm: 0b /r]"
or,0x00,reg16,reg16,"[rm: 0b /r]"
or,0x00,rm16,imm8,"[mi: 83 /1 ib,s]"
or,0x00,al,imm,"[-i: 0c ib]"
or,0x00,ax,sbyteword,"[mi: 83 /1 ib,s]"
or,0x00,ax,imm,"[-i: 0d iw]"
or,0x00,rm8,imm,"[mi: 80 /1 ib]"
or,0x00,rm16,sbyteword,"[mi: 83 /1 ib,s]"
or,0x00,rm16,imm,"[mi: 81 /1 iw]"
or,0x00,mem,imm8,"[mi: 80 /1 ib]"
or,0x00,mem,sbyteword16,"[mi: 83 /1 ib,s]"
or,0x00,mem,imm16,"[mi: 81 /1 iw]"
or,0x00,rm8,imm,"[mi: 82 /1 ib]"
out,0x00,imm,al,"[i-: e6 ib,u]"
out,0x00,imm,ax,"[i-: e7 ib,u]"
out,0x00,dx,al,"[--: ee]"
out,0x00,dx,ax,"[--: ef]"
pause,0x00,,,"[f3i 90]"
pop,0x00,reg16,,"[r: 58+r]"
pop,0x00,rm16,,"[m: 8f /0]"
pop,0x00,es,,"[-: 07]"
pop,0x00,cs,,"[-: 0f]"
pop,0x00,ss,,"[-: 17]"
pop,0x00,ds,,"[-: 1f]"
popf,0x00,,,"[9d]"
popfw,0x00,,,"[9d]"
push,0x00,reg16,,"[r: 50+r]"
push,0x00,rm16,,"[m: ff /6]"
push,0x00,es,,"[-: 06]"
push,0x00,cs,,"[-: 0e]"
push,0x00,ss,,"[-: 16]"
push,0x00,ds,,"[-: 1e]"
pushf,0x00,,,"[9c]"
pushfw,0x00,,,"[9c]"
rcl,0x00,rm8,one,"[m-: d0 /2]"
rcl,0x00,rm8,cl,"[m-: d2 /2]"
rcl,0x00,rm16,one,"[m-: d1 /2]"
rcl,0x00,rm16,cl,"[m-: d3 /2]"
rcr,0x00,rm8,one,"[m-: d0 /3]"
rcr,0x00,rm8,cl,"[m-: d2 /3]"
rcr,0x00,rm16,one,"[m-: d1 /3]"
rcr,0x00,rm16,cl,"[m-: d3 /3]"
ret,0x00,,,"[c3]"
ret,0x00,imm,,"[i: c2 iw]"
retf,0x00,,,"[cb]"
retf,0x00,imm,,"[i: ca iw]"
retn,0x00,,,"[c3]"
retn,0x00,imm,,"[i: c2 iw]"
retw,0x00,,,"[c3]"
retw,0x00,imm,,"[i: c2 iw]"
retfw,0x00,,,"[cb]"
retfw,0x00,imm,,"[i: ca iw]"
retnw,0x00,,,"[c3]"
retnw,0x00,imm,,"[i: c2 iw]"
retd,0x00,,,"[o32 c3]"
retd,0x00,imm,,"[i: o32 c2 iw]"
retfd,0x00,,,"[o32 cb]"
retfd,0x00,imm,,"[i: o32 ca iw]"
retnd,0x00,,,"[o32 c3]"
retnd,0x00,imm,,"[i: o32 c2 iw]"
rol,0x00,rm8,one,"[m-: d0 /0]"
rol,0x00,rm8,cl,"[m-: d2 /0]"
rol,0x00,rm16,one,"[m-: d1 /0]"
rol,0x00,rm16,cl,"[m-: d3 /0]"
ror,0x00,rm8,one,"[m-: d0 /1]"
ror,0x00,rm8,cl,"[m-: d2 /1]"
ror,0x00,rm16,one,"[m-: d1 /1]"
ror,0x00,rm16,cl,"[m-: d3 /1]"
sahf,0x00,,,"[9e]"
sal,0x00,rm8,one,"[m-: d0 /4]"
sal,0x00,rm8,cl,"[m-: d2 /4]"
sal,0x00,rm16,one,"[m-: d1 /4]"
sal,0x00,rm16,cl,"[m-: d3 /4]"
salc,0x00,,,"[d6]"
sar,0x00,rm8,one,"[m-: d0 /7]"
sar,0x00,rm8,cl,"[m-: d2 /7]"
sar,0x00,rm16,one,"[m-: d1 /7]"
sar,0x00,rm16,cl,"[m-: d3 /7]"
sbb,0x00,mem,reg8,"[mr: 18 /r]"
sbb,0x00,reg8,reg8,"[mr: 18 /r]"
sbb,0x00,mem,reg16,"[mr: 19 /r]"
sbb,0x00,reg16,reg16,"[mr: 19 /r]"
sbb,0x00,reg8,mem,"[rm: 1a /r]"
sbb,0x00,reg8,reg8,"[rm: 1a /r]"
sbb,0x00,reg16,mem,"[rm: 1b /r]"
sbb,0x00,reg16,reg16,"[rm: 1b /r]"
sbb,0x00,rm16,imm8,"[mi: 83 /3 ib,s]"
sbb,0x00,al,imm,"[-i: 1c ib]"
sbb,0x00,ax,sbyteword,"[mi: 83 /3 ib,s]"
sbb,0x00,ax,imm,"[-i: 1d iw]"
sbb,0x00,rm8,imm,"[mi: 80 /3 ib]"
sbb,0x00,rm16,sbyteword,"[mi: 83 /3 ib,s]"
sbb,0x00,rm16,imm,"[mi: 81 /3 iw]"
sbb,0x00,mem,imm8,"[mi: 80 /3 ib]"
sbb,0x00,mem,sbyteword16,"[mi: 83 /3 ib,s]"
sbb,0x00,mem,imm16,"[mi: 81 /3 iw]"
sbb,0x00,rm8,imm,"[mi: 82 /3 ib]"
scasb,0x00,,,"[repe ae]"
scasw,0x00,,,"[repe af]"
shl,0x00,rm8,one,"[m-: d0 /4]"
shl,0x00,rm8,cl,"[m-: d2 /4]"
shl,0x00,rm16,one,"[m-: d1 /4]"
shl,0x00,rm16,cl,"[m-: d3 /4]"
shr,0x00,rm8,one,"[m-: d0 /5]"
shr,0x00,rm8,cl,"[m-: d2 /5]"
shr,0x00,rm16,one,"[m-: d1 /5]"
shr,0x00,rm16,cl,"[m-: d3 /5]"
stc,0x00,,,"[f9]"
std,0x00,,,"[fd]"
sti,0x00,,,"[fb]"
stosb,0x00,,,"[aa]"
stosw,0x00,,,"[ab]"
sub,0x00,mem,reg8,"[mr: 28 /r]"
sub,0x00,reg8,reg8,"[mr: 28 /r]"
sub,0x00,mem,reg16,"[mr: 29 /r]"
sub,0x00,reg16,reg16,"[mr: 29 /r]"
sub,0x00,reg8,mem,"[rm: 2a /r]"
sub,0x00,reg8,reg8,"[rm: 2a /r]"
sub,0x00,reg16,mem,"[rm: 2b /r]"
sub,0x00,reg16,reg16,"[rm: 2b /r]"
sub,0x00,rm16,imm8,"[mi: 83 /5 ib,s]"
sub,0x00,al,imm,"[-i: 2c ib]"
sub,0x00,ax,sbyteword,"[mi: 83 /5 ib,s]"
sub,0x00,ax,imm,"[-i: 2d iw]"
sub,0x00,rm8,imm,"[mi: 80 /5 ib]"
sub,0x00,rm16,sbyteword,"[mi: 83 /5 ib,s]"
sub,0x00,rm16,imm,"[mi: 81 /5 iw]"
sub,0x00,mem,imm8,"[mi: 80 /5 ib]"
sub,0x00,mem,sbyteword16,"[mi: 83 /5 ib,s]"
sub,0x00,mem,imm16,"[mi: 81 /5 iw]"
sub,0x00,rm8,imm,"[mi: 82 /5 ib]"
test,0x00,mem,reg8,"[mr: 84 /r]"
test,0x00,reg8,reg8,"[mr: 84 /r]"
test,0x00,mem,reg16,"[mr: 85 /r]"
test,0x00,reg16,reg16,"[mr: 85 /r]"
test,0x00,reg8,mem,"[rm: 84 /r]"
test,0x00,reg16,mem,"[rm: 85 /r]"
test,0x00,al,imm,"[-i: a8 ib]"
test,0x00,ax,imm,"[-i: a9 iw]"
test,0x00,rm8,imm,"[mi: f6 /0 ib]"
test,0x00,rm16,imm,"[mi: f7 /0 iw]"
test,0x00,mem,imm8,"[mi: f6 /0 ib]"
test,0x00,mem,imm16,"[mi: f7 /0 iw]"
fwait,0x00,,,"[wait]"
xchg,0x00,ax,reg16,"[-r: 90+r]"
xchg,0x00,reg16,ax,"[r-: 90+r]"
xchg,0x00,reg8,mem,"[rm: l 86 /r]"
xchg,0x00,reg8,reg8,"[rm: 86 /r]"
xchg,0x00,reg16,mem,"[rm: l 87 /r]"
xchg,0x00,reg16,reg16,"[rm: 87 /r]"
xchg,0x00,mem,reg8,"[mr: l 86 /r]"
xchg,0x00,reg8,reg8,"[mr: 86 /r]"
xchg,0x00,mem,reg16,"[mr: l 87 /r]"
xchg,0x00,reg16,reg16,"[mr: 87 /r]"
xlatb,0x00,,,"[d7]"
xlat,0x00,,,"[d7]"
xor,0x00,mem,reg8,"[mr: 30 /r]"
xor,0x00,reg8,reg8,"[mr: 30 /r]"
xor,0x00,mem,reg16,"[mr: 31 /r]"
xor,0x00,reg16,reg16,"[mr: 31 /r]"
xor,0x00,reg8,mem,"[rm: 32 /r]"
xor,0x00,reg8,reg8,"[rm: 32 /r]"
xor,0x00,reg16,mem,"[rm: 33 /r]"
xor,0x00,reg16,reg16,"[rm: 33 /r]"
xor,0x00,rm16,imm8,"[mi: 83 /6 ib,s]"
xor,0x00,al,imm,"[-i: 34 ib]"
xor,0x00,ax,sbyteword,"[mi: 83 /6 ib,s]"
xor,0x00,ax,imm,"[-i: 35 iw]"
xor,0x00,rm8,imm,"[mi: 80 /6 ib]"
xor,0x00,rm16,sbyteword,"[mi: 83 /6 ib,s]"
xor,0x00,rm16,imm,"[mi: 81 /6 iw]"
xor,0x00,mem,imm8,"[mi: 80 /6 ib]"
xor,0x00,mem,sbyteword16,"[mi: 83 /6 ib,s]"
xor,0x00,mem,imm16,"[mi: 81 /6 iw]"
xor,0x00,rm8,imm,"[mi: 82 /6 ib]"
