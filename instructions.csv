mnemonic,destination,source,encoder
aaa,,,"[37]"
aad,,,"[d5 0a]"
aad,imm,,"[i: d5 ib]"
aam,,,"[d4 0a]"
aam,imm,,"[i: d4 ib]"
aas,,,"[3f]"
adc,mem,reg8,"[mr: 10 /r]"
adc,reg8,reg8,"[mr: 10 /r]"
adc,mem,reg16,"[mr: 11 /r]"
adc,reg16,reg16,"[mr: 11 /r]"
adc,reg8,mem,"[rm: 12 /r]"
adc,reg8,reg8,"[rm: 12 /r]"
adc,reg16,mem,"[rm: 13 /r]"
adc,reg16,reg16,"[rm: 13 /r]"
adc,rm16,imm8,"[mi: 83 /2 ibs]"
adc,al,imm,"[-i: 14 ib]"
adc,ax,sbyteword,"[mi: 83 /2 ibs]"
adc,ax,imm,"[-i: 15 iw]"
adc,rm8,imm,"[mi: 80 /2 ib]"
adc,rm16,sbyteword,"[mi: 83 /2 ibs]"
adc,rm16,imm,"[mi: 81 /2 iw]"
adc,mem,imm8,"[mi: 80 /2 ib]"
adc,mem,sbyteword16,"[mi: 83 /2 ibs]"
adc,mem,imm16,"[mi: 81 /2 iw]"
adc,rm8,imm,"[mi: 82 /2 ib]"
add,mem,reg8,"[mr: 00 /r]"
add,reg8,reg8,"[mr: 00 /r]"
add,mem,reg16,"[mr: 01 /r]"
add,reg16,reg16,"[mr: 01 /r]"
add,reg8,mem,"[rm: 02 /r]"
add,reg8,reg8,"[rm: 02 /r]"
add,reg16,mem,"[rm: 03 /r]"
add,reg16,reg16,"[rm: 03 /r]"
add,rm16,imm8,"[mi: 83 /0 ibs]"
add,al,imm,"[-i: 04 ib]"
add,ax,sbyteword,"[mi: 83 /0 ibs]"
add,ax,imm,"[-i: 05 iw]"
add,rm8,imm,"[mi: 80 /0 ib]"
add,rm16,sbyteword,"[mi: 83 /0 ibs]"
add,rm16,imm,"[mi: 81 /0 iw]"
add,mem,imm8,"[mi: 80 /0 ib]"
add,mem,sbyteword16,"[mi: 83 /0 ibs]"
add,mem,imm16,"[mi: 81 /0 iw]"
add,rm8,imm,"[mi: 82 /0 ib]"
and,mem,reg8,"[mr: 20 /r]"
and,reg8,reg8,"[mr: 20 /r]"
and,mem,reg16,"[mr: 21 /r]"
and,reg16,reg16,"[mr: 21 /r]"
and,reg8,mem,"[rm: 22 /r]"
and,reg8,reg8,"[rm: 22 /r]"
and,reg16,mem,"[rm: 23 /r]"
and,reg16,reg16,"[rm: 23 /r]"
and,rm16,imm8,"[mi: 83 /4 ibs]"
and,al,imm,"[-i: 24 ib]"
and,ax,sbyteword,"[mi: 83 /4 ibs]"
and,ax,imm,"[-i: 25 iw]"
and,rm8,imm,"[mi: 80 /4 ib]"
and,rm16,sbyteword,"[mi: 83 /4 ibs]"
and,rm16,imm,"[mi: 81 /4 iw]"
and,mem,imm8,"[mi: 80 /4 ib]"
and,mem,sbyteword16,"[mi: 83 /4 ibs]"
and,mem,imm16,"[mi: 81 /4 iw]"
and,rm8,imm,"[mi: 82 /4 ib]"
call,imm,,"[i: e8 rel]"
call,imm,,"[i: e8 rel] near"
call,imm,,"[i: 9a iwd seg] far"
call,imm16,,"[i: e8 rel]"
call,imm16,,"[i: e8 rel] near"
call,imm16,,"[i: 9a iwd seg] far"
call,seg_off,,"[ji: 9a iwd iw]"
call,seg_off,,"[ji: 9a iw iw]"
call,seg_off,,"[ji: 9a iw iw]"
call,mem,,"[m: ff /3] far"
call,mem16,,"[m: ff /3] far"
call,mem,,"[m: ff /2] near"
call,rm16,,"[m: ff /2] near"
call,mem,,"[m: ff /2]"
call,rm16,,"[m: ff /2]"
cbw,,,"[98]"
clc,,,"[f8]"
cld,,,"[fc]"
cli,,,"[fa]"
cmc,,,"[f5]"
cmp,mem,reg8,"[mr: 38 /r]"
cmp,reg8,reg8,"[mr: 38 /r]"
cmp,mem,reg16,"[mr: 39 /r]"
cmp,reg16,reg16,"[mr: 39 /r]"
cmp,reg8,mem,"[rm: 3a /r]"
cmp,reg8,reg8,"[rm: 3a /r]"
cmp,reg16,mem,"[rm: 3b /r]"
cmp,reg16,reg16,"[rm: 3b /r]"
cmp,rm16,imm8,"[mi: 83 /7 ibs]"
cmp,al,imm,"[-i: 3c ib]"
cmp,ax,sbyteword,"[mi: 83 /7 ibs]"
cmp,ax,imm,"[-i: 3d iw]"
cmp,rm8,imm,"[mi: 80 /7 ib]"
cmp,rm16,sbyteword,"[mi: 83 /7 ibs]"
cmp,rm16,imm,"[mi: 81 /7 iw]"
cmp,mem,imm8,"[mi: 80 /7 ib]"
cmp,mem,sbyteword16,"[mi: 83 /7 ibs]"
cmp,mem,imm16,"[mi: 81 /7 iw]"
cmp,rm8,imm,"[mi: 82 /7 ib]"
cmpsb,,,"[repe a6]"
cmpsw,,,"[repe a7]"
cwd,,,"[99]"
daa,,,"[27]"
das,,,"[2f]"
dec,reg16,,"[r: 48+r]"
dec,rm8,,"[m: fe /1]"
dec,rm16,,"[m: ff /1]"
div,rm8,,"[m: f6 /6]"
div,rm16,,"[m: f7 /6]"
hlt,,,"[f4]"
idiv,rm8,,"[m: f6 /7]"
idiv,rm16,,"[m: f7 /7]"
imul,rm8,,"[m: f6 /5]"
imul,rm16,,"[m: f7 /5]"
in,al,imm,"[-i: e4 ib]"
in,ax,imm,"[-i: e5 ib]"
in,al,dx,"[ec]"
in,ax,dx,"[ed]"
inc,reg16,,"[r: 40+r]"
inc,rm8,,"[m: fe /0]"
inc,rm16,,"[m: ff /0]"
int,imm,,"[i: cd ib]"
int03,,,"[cc]"
int3,,,"[cc]"
into,,,"[ce]"
iret,,,"[cf]"
jcxz,imm,,"[i: e3 rel8]"
jmp,imm,,"[i: eb rel8] short"
jmp,imm,,"[i: jmp8 eb rel8]"
jmp,imm,,"[i: e9 rel]"
jmp,imm,,"[i: e9 rel] near"
jmp,imm,,"[i: ea iwd seg] far"
jmp,imm16,,"[i: e9 rel]"
jmp,imm16,,"[i: e9 rel] near"
jmp,imm16,,"[i: ea iwd seg] far"
jmp,seg_off,,"[ji: ea iwd iw]"
jmp,seg_off,,"[ji: ea iw iw]"
jmp,seg_off,,"[ji: ea iw iw]"
jmp,mem,,"[m: ff /5] far"
jmp,mem16,,"[m: ff /5] far"
jmp,mem,,"[m: ff /4] near"
jmp,rm16,,"[m: ff /4] near"
jmp,mem,,"[m: ff /4]"
jmp,rm16,,"[m: ff /4]"
lahf,,,"[9f]"
lds,reg16,mem,"[rm: c5 /r]"
lea,reg16,mem,"[rm: 8d /r]"
lea,reg16,imm,"[rm: 8d /r]"
les,reg16,mem,"[rm: c4 /r]"
lodsb,,,"[ac]"
lodsw,,,"[ad]"
loop,imm,cx,"[i: e2 rel8]"
loope,imm,cx,"[i: e1 rel8]"
loopne,imm,cx,"[i: e0 rel8]"
loopnz,imm,cx,"[i: e0 rel8]"
loopz,imm,cx,"[i: e1 rel8]"
mov,mem,seg,"[mr: 8c /r]"
mov,reg16,seg,"[mr: 8c /r]"
mov,seg,mem,"[rm: 8e /r]"
mov,seg,reg16,"[rm: 8e /r]"
mov,seg,reg16,"[rm: 8e /r]"
mov,al,mem,"[-i: a0 iw]"
mov,ax,mem,"[-i: a1 iw]"
mov,mem,al,"[i: a2 iw]"
mov,mem,ax,"[i: a3 iw]"
mov,mem,reg8,"[mr: 88 /r]"
mov,reg8,reg8,"[mr: 88 /r]"
mov,mem,reg16,"[mr: 89 /r]"
mov,reg16,reg16,"[mr: 89 /r]"
mov,reg8,mem,"[rm: 8a /r]"
mov,reg8,reg8,"[rm: 8a /r]"
mov,reg16,mem,"[rm: 8b /r]"
mov,reg16,reg16,"[rm: 8b /r]"
mov,reg8,imm,"[ri: b0+r ib]"
mov,reg16,imm,"[ri: b8+r iw]"
mov,rm8,imm,"[mi: c6 /0 ib]"
mov,rm16,imm,"[mi: c7 /0 iw]"
mov,mem,imm8,"[mi: c6 /0 ib]"
mov,mem,imm16,"[mi: c7 /0 iw]"
movsb,,,"[a4]"
movsw,,,"[a5]"
mul,rm8,,"[m: f6 /4]"
mul,rm16,,"[m: f7 /4]"
neg,rm8,,"[m: f6 /3]"
neg,rm16,,"[m: f7 /3]"
nop,,,"[90]"
not,rm8,,"[m: f6 /2]"
not,rm16,,"[m: f7 /2]"
or,mem,reg8,"[mr: 08 /r]"
or,reg8,reg8,"[mr: 08 /r]"
or,mem,reg16,"[mr: 09 /r]"
or,reg16,reg16,"[mr: 09 /r]"
or,reg8,mem,"[rm: 0a /r]"
or,reg8,reg8,"[rm: 0a /r]"
or,reg16,mem,"[rm: 0b /r]"
or,reg16,reg16,"[rm: 0b /r]"
or,rm16,imm8,"[mi: 83 /1 ibs]"
or,al,imm,"[-i: 0c ib]"
or,ax,sbyteword,"[mi: 83 /1 ibs]"
or,ax,imm,"[-i: 0d iw]"
or,rm8,imm,"[mi: 80 /1 ib]"
or,rm16,sbyteword,"[mi: 83 /1 ibs]"
or,rm16,imm,"[mi: 81 /1 iw]"
or,mem,imm8,"[mi: 80 /1 ib]"
or,mem,sbyteword16,"[mi: 83 /1 ibs]"
or,mem,imm16,"[mi: 81 /1 iw]"
or,rm8,imm,"[mi: 82 /1 ib]"
out,imm,al,"[i: e6 ib]"
out,imm,ax,"[i: e7 ib]"
out,dx,al,"[ee]"
out,dx,ax,"[ef]"
pop,reg16,,"[r: 58+r]"
pop,rm16,,"[m: 8f /0]"
pop,es,,"[07]"
pop,cs,,"[0f]"
pop,ss,,"[17]"
pop,ds,,"[1f]"
popf,,,"[9d]"
popfw,,,"[9d]"
push,reg16,,"[r: 50+r]"
push,rm16,,"[m: ff /6]"
push,es,,"[06]"
push,cs,,"[0e]"
push,ss,,"[16]"
push,ds,,"[1e]"
pushf,,,"[9c]"
pushfw,,,"[9c]"
rcl,rm8,one,"[m: d0 /2]"
rcl,rm8,cl,"[m: d2 /2]"
rcl,rm16,one,"[m: d1 /2]"
rcl,rm16,cl,"[m: d3 /2]"
rcr,rm8,one,"[m: d0 /3]"
rcr,rm8,cl,"[m: d2 /3]"
rcr,rm16,one,"[m: d1 /3]"
rcr,rm16,cl,"[m: d3 /3]"
ret,,,"[c3]"
ret,imm,,"[i: c2 iw]"
retf,,,"[cb]"
retf,imm,,"[i: ca iw]"
rol,rm8,one,"[m: d0 /0]"
rol,rm8,cl,"[m: d2 /0]"
rol,rm16,one,"[m: d1 /0]"
rol,rm16,cl,"[m: d3 /0]"
ror,rm8,one,"[m: d0 /1]"
ror,rm8,cl,"[m: d2 /1]"
ror,rm16,one,"[m: d1 /1]"
ror,rm16,cl,"[m: d3 /1]"
sahf,,,"[9e]"
sal,rm8,one,"[m: d0 /4]"
sal,rm8,cl,"[m: d2 /4]"
sal,rm16,one,"[m: d1 /4]"
sal,rm16,cl,"[m: d3 /4]"
salc,,,"[d6]"
sar,rm8,one,"[m: d0 /7]"
sar,rm8,cl,"[m: d2 /7]"
sar,rm16,one,"[m: d1 /7]"
sar,rm16,cl,"[m: d3 /7]"
sbb,mem,reg8,"[mr: 18 /r]"
sbb,reg8,reg8,"[mr: 18 /r]"
sbb,mem,reg16,"[mr: 19 /r]"
sbb,reg16,reg16,"[mr: 19 /r]"
sbb,reg8,mem,"[rm: 1a /r]"
sbb,reg8,reg8,"[rm: 1a /r]"
sbb,reg16,mem,"[rm: 1b /r]"
sbb,reg16,reg16,"[rm: 1b /r]"
sbb,rm16,imm8,"[mi: 83 /3 ibs]"
sbb,al,imm,"[-i: 1c ib]"
sbb,ax,sbyteword,"[mi: 83 /3 ibs]"
sbb,ax,imm,"[-i: 1d iw]"
sbb,rm8,imm,"[mi: 80 /3 ib]"
sbb,rm16,sbyteword,"[mi: 83 /3 ibs]"
sbb,rm16,imm,"[mi: 81 /3 iw]"
sbb,mem,imm8,"[mi: 80 /3 ib]"
sbb,mem,sbyteword16,"[mi: 83 /3 ibs]"
sbb,mem,imm16,"[mi: 81 /3 iw]"
sbb,rm8,imm,"[mi: 82 /3 ib]"
scasb,,,"[repe ae]"
scasw,,,"[repe af]"
shl,rm8,one,"[m: d0 /4]"
shl,rm8,cl,"[m: d2 /4]"
shl,rm16,one,"[m: d1 /4]"
shl,rm16,cl,"[m: d3 /4]"
shr,rm8,one,"[m: d0 /5]"
shr,rm8,cl,"[m: d2 /5]"
shr,rm16,one,"[m: d1 /5]"
shr,rm16,cl,"[m: d3 /5]"
stc,,,"[f9]"
std,,,"[fd]"
sti,,,"[fb]"
stosb,,,"[aa]"
stosw,,,"[ab]"
sub,mem,reg8,"[mr: 28 /r]"
sub,reg8,reg8,"[mr: 28 /r]"
sub,mem,reg16,"[mr: 29 /r]"
sub,reg16,reg16,"[mr: 29 /r]"
sub,reg8,mem,"[rm: 2a /r]"
sub,reg8,reg8,"[rm: 2a /r]"
sub,reg16,mem,"[rm: 2b /r]"
sub,reg16,reg16,"[rm: 2b /r]"
sub,rm16,imm8,"[mi: 83 /5 ibs]"
sub,al,imm,"[-i: 2c ib]"
sub,ax,sbyteword,"[mi: 83 /5 ibs]"
sub,ax,imm,"[-i: 2d iw]"
sub,rm8,imm,"[mi: 80 /5 ib]"
sub,rm16,sbyteword,"[mi: 83 /5 ibs]"
sub,rm16,imm,"[mi: 81 /5 iw]"
sub,mem,imm8,"[mi: 80 /5 ib]"
sub,mem,sbyteword16,"[mi: 83 /5 ibs]"
sub,mem,imm16,"[mi: 81 /5 iw]"
sub,rm8,imm,"[mi: 82 /5 ib]"
test,mem,reg8,"[mr: 84 /r]"
test,reg8,reg8,"[mr: 84 /r]"
test,mem,reg16,"[mr: 85 /r]"
test,reg16,reg16,"[mr: 85 /r]"
test,reg8,mem,"[rm: 84 /r]"
test,reg16,mem,"[rm: 85 /r]"
test,al,imm,"[-i: a8 ib]"
test,ax,imm,"[-i: a9 iw]"
test,rm8,imm,"[mi: f6 /0 ib]"
test,rm16,imm,"[mi: f7 /0 iw]"
test,mem,imm8,"[mi: f6 /0 ib]"
test,mem,imm16,"[mi: f7 /0 iw]"
fwait,,,"[wait]"
xchg,ax,reg16,"[-r: 90+r]"
xchg,reg16,ax,"[r: 90+r]"
xchg,reg8,mem,"[rm:86 /r]"
xchg,reg8,reg8,"[rm: 86 /r]"
xchg,reg16,mem,"[rm:87 /r]"
xchg,reg16,reg16,"[rm: 87 /r]"
xchg,mem,reg8,"[mr:86 /r]"
xchg,reg8,reg8,"[mr: 86 /r]"
xchg,mem,reg16,"[mr:87 /r]"
xchg,reg16,reg16,"[mr: 87 /r]"
xlatb,,,"[d7]"
xlat,,,"[d7]"
xor,mem,reg8,"[mr: 30 /r]"
xor,reg8,reg8,"[mr: 30 /r]"
xor,mem,reg16,"[mr: 31 /r]"
xor,reg16,reg16,"[mr: 31 /r]"
xor,reg8,mem,"[rm: 32 /r]"
xor,reg8,reg8,"[rm: 32 /r]"
xor,reg16,mem,"[rm: 33 /r]"
xor,reg16,reg16,"[rm: 33 /r]"
xor,rm16,imm8,"[mi: 83 /6 ibs]"
xor,al,imm,"[-i: 34 ib]"
xor,ax,sbyteword,"[mi: 83 /6 ibs]"
xor,ax,imm,"[-i: 35 iw]"
xor,rm8,imm,"[mi: 80 /6 ib]"
xor,rm16,sbyteword,"[mi: 83 /6 ibs]"
xor,rm16,imm,"[mi: 81 /6 iw]"
xor,mem,imm8,"[mi: 80 /6 ib]"
xor,mem,sbyteword16,"[mi: 83 /6 ibs]"
xor,mem,imm16,"[mi: 81 /6 iw]"
xor,rm8,imm,"[mi: 82 /6 ib]"
